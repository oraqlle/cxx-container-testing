{
    "version": 2,
    "cmakeMinimumRequired": {
        "major": 3,
        "minor": 15,
        "patch": 0
    },
    "configurePresets": [
        {
            "name": "dev-mode",
            "hidden": true,
            "cacheVariables": {
                "cxx-container-testing_DEVELOPER_MODE": "ON"
            }
        },
        {
            "name": "vcpkg",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"
            }
        },
        {
            "name": "vcpkg-win64-static",
            "hidden": true,
            "cacheVariables": {
                "VCPKG_TARGET_TRIPLET": "x64-windows-static-md"
            }
        },
        {
            "name": "cppcheck",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_CXX_CPPCHECK": "cppcheck;--inline-suppr"
            }
        },
        {
            "name": "clang-tidy",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_CXX_CLANG_TIDY": "clang-tidy;--header-filter=^${sourceDir}/"
            }
        },
        {
            "name": "std-base",
            "description": "This preset makes sure the project actually builds with at least the specified standard",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_CXX_EXTENSIONS": "OFF",
                "CMAKE_CXX_STANDARD": "20",
                "CMAKE_CXX_STANDARD_REQUIRED": "ON"
            }
        },
        {
            "name": "flags-gcc-clang",
            "description": "These flags are supported by both GCC and Clang",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_CXX_FLAGS": "-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=3 -fstack-protector-strong -fcf-protection=full -fstack-clash-protection -Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -Wcast-qual -Wformat=2 -Wundef -Werror=float-equal -Wshadow -Wcast-align -Wunused -Wnull-dereference -Wdouble-promotion -Wimplicit-fallthrough -Wextra-semi -Woverloaded-virtual -Wnon-virtual-dtor -Wold-style-cast",
                "CMAKE_EXE_LINKER_FLAGS": "-Wl,--allow-shlib-undefined,--as-needed,-z,noexecstack,-z,relro,-z,now",
                "CMAKE_SHARED_LINKER_FLAGS": "-Wl,--allow-shlib-undefined,--as-needed,-z,noexecstack,-z,relro,-z,now"
            }
        },
        {
            "name": "flags-appleclang",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_CXX_FLAGS": "-fstack-protector-strong -Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -Wcast-qual -Wformat=2 -Wundef -Werror=float-equal -Wshadow -Wcast-align -Wunused -Wnull-dereference -Wdouble-promotion -Wimplicit-fallthrough -Wextra-semi -Woverloaded-virtual -Wnon-virtual-dtor -Wold-style-cast"
            }
        },
        {
            "name": "flags-msvc",
            "description": "Note that all the flags after /W4 are required for MSVC to conform to the language standard",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_CXX_FLAGS": "/sdl /guard:cf /utf-8 /diagnostics:caret /w14165 /w44242 /w44254 /w44263 /w34265 /w34287 /w44296 /w44365 /w44388 /w44464 /w14545 /w14546 /w14547 /w14549 /w14555 /w34619 /w34640 /w24826 /w14905 /w14906 /w14928 /w45038 /W4 /permissive- /volatile:iso /Zc:inline /Zc:preprocessor /Zc:enumTypes /Zc:lambda /Zc:__cplusplus /Zc:externConstexpr /Zc:throwingNew /EHsc",
                "CMAKE_EXE_LINKER_FLAGS": "/machine:x64 /guard:cf"
            }
        },
        {
            "name": "build-base",
            "binaryDir": "${sourceDir}/build",
            "hidden": true
        },
        {
            "name": "linux-base",
            "generator": "Unix Makefiles",
            "hidden": true,
            "inherits": [
                "flags-gcc-clang",
                "std-base",
                "vcpkg",
                "build-base"
            ],
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release"
            }
        },
        {
            "name": "darwin-base",
            "generator": "Unix Makefiles",
            "hidden": true,
            "inherits": [
                "flags-appleclang",
                "std-base",
                "vcpkg",
                "build-base"
            ],
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release"
            }
        },
        {
            "name": "win64-base",
            "generator": "Visual Studio 17 2022",
            "hidden": true,
            "architecture": "x64",
            "inherits": [
                "flags-msvc",
                "std-base",
                "vcpkg",
                "vcpkg-win64-static",
                "build-base"
            ]
        },
        {
            "name": "coverage-linux",
            "binaryDir": "${sourceDir}/build/coverage",
            "inherits": "linux-base",
            "hidden": true,
            "cacheVariables": {
                "ENABLE_COVERAGE": "ON",
                "CMAKE_BUILD_TYPE": "Coverage",
                "CMAKE_CXX_FLAGS_COVERAGE": "-Og -g --coverage -fkeep-inline-functions -fkeep-static-functions",
                "CMAKE_EXE_LINKER_FLAGS_COVERAGE": "--coverage",
                "CMAKE_SHARED_LINKER_FLAGS_COVERAGE": "--coverage",
                "CMAKE_MAP_IMPORTED_CONFIG_COVERAGE": "Coverage;RelWithDebInfo;Release;Debug;"
            }
        },
        {
            "name": "ci-coverage",
            "inherits": [
                "coverage-linux",
                "dev-mode",
                "vcpkg"
            ],
            "cacheVariables": {
                "COVERAGE_HTML_COMMAND": ""
            }
        },
        {
            "name": "ci-sanitize",
            "binaryDir": "${sourceDir}/build/sanitize",
            "inherits": [
                "linux-base",
                "dev-mode",
                "vcpkg"
            ],
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Sanitize",
                "CMAKE_CXX_FLAGS_SANITIZE": "-U_FORTIFY_SOURCE -O2 -g -fsanitize=address,undefined -fno-omit-frame-pointer -fno-common",
                "CMAKE_MAP_IMPORTED_CONFIG_SANITIZE": "Sanitize;RelWithDebInfo;Release;Debug;"
            }
        },
        {
            "name": "ci-macos",
            "inherits": [
                "build-base",
                "darwin-base",
                "dev-mode",
                "vcpkg"
            ]
        },
        {
            "name": "ci-linux",
            "inherits": [
                "build-base",
                "linux-base",
                "clang-tidy",
                "vcpkg",
                "cppcheck",
                "dev-mode"
            ]
        },
        {
            "name": "ci-windows",
            "inherits": [
                "build-base",
                "win64-base",
                "dev-mode",
                "vcpkg",
                "vcpkg-win64-static"
            ]
        },
        {
            "name": "linux",
            "binaryDir": "${sourceDir}/build/linux/release",
            "inherits": [
                "linux-base"
            ],
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release",
                "CMAKE_CXX_FLAGS_RELEASE": "-O2"
            }
        },
        {
            "name": "macos",
            "binaryDir": "${sourceDir}/build/macos/release",
            "inherits": [
                "darwin-base"
            ],
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release",
                "CMAKE_CXX_FLAGS_RELEASE": "-O2"
            }
        },
        {
            "name": "windows",
            "binaryDir": "${sourceDir}/build/windows",
            "inherits": [
                "win64-base"
            ],
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release",
                "CMAKE_CXX_FLAGS_RELEASE": "/O2"
            }
        },
        {
            "name": "dev-common",
            "hidden": true,
            "inherits": [
                "dev-mode",
                "clang-tidy",
                "cppcheck"
            ]
        },
        {
            "name": "debug-linux",
            "binaryDir": "${sourceDir}/build/linux/debug",
            "inherits": [
                "dev-common",
                "linux-base"
            ],
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
            }
        },
        {
            "name": "debug-macos",
            "binaryDir": "${sourceDir}/build/macos/debug",
            "inherits": [
                "dev-common",
                "darwin-base"
            ],
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
            }
        },
        {
            "name": "debug-windows",
            "binaryDir": "${sourceDir}/build/windows/",
            "inherits": [
                "dev-common",
                "win64-base"
            ],
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
            },
            "environment": {
                "UseMultiToolTask": "true",
                "EnforceProcessCountAcrossBuilds": "true"
            }
        }
    ],
    "buildPresets": [
        {
            "name": "linux",
            "configurePreset": "linux",
            "configuration": "Release",
            "jobs": 16
        },
        {
            "name": "macos",
            "configurePreset": "macos",
            "configuration": "Release",
            "jobs": 16
        },
        {
            "name": "windows",
            "configurePreset": "windows",
            "configuration": "Release",
            "jobs": 16
        },
        {
            "name": "debug-linux",
            "configurePreset": "debug-linux",
            "configuration": "Debug",
            "jobs": 16
        },
        {
            "name": "debug-macos",
            "configurePreset": "debug-macos",
            "configuration": "Debug",
            "jobs": 16
        }
    ]
}